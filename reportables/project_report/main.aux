\relax 
\select@language{english}
\@writefile{toc}{\select@language{english}}
\@writefile{lof}{\select@language{english}}
\@writefile{lot}{\select@language{english}}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}The Soot Framework}{1}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Intra-procedural execution flow}}{1}}
\newlabel{fig1}{{1}{1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2}Program Dependence Graphs}{1}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Program dependence graph}}{1}}
\newlabel{fig2}{{2}{1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3}System Dependence Graphs}{2}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces example functions}}{2}}
\newlabel{fig3}{{3}{2}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces System dependence graph}}{2}}
\newlabel{fig4}{{4}{2}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Implementation and Results}{2}}
\newlabel{sec:introduction}{{2}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Soot PDGs}{2}}
\newlabel{sec:some_section}{{2.1}{2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.1}Built-in PDG generation}{2}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces A sample Java program}}{2}}
\newlabel{f:sampProg}{{5}{2}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces The PDG of the sample Java program in Figure~\ref  {f:sampProg}}}{2}}
\newlabel{f:sampPdg}{{6}{2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.2}Information flow sets}{3}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces A PDG with in/out flow information denoted.}}{3}}
\newlabel{f:sampInOut}{{7}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Implementation via Soot}{3}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.1}Key assumptions}{3}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.2}Code structure}{3}}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces Project code structure.}}{3}}
\newlabel{f:structure}{{8}{3}}
\bibstyle{abbrvnat}
\bibdata{references}
\bibcite{Aho86-Compilers}{{1}{1986}{{Aho et~al.}}{{Aho, Sethi, and Ullman}}}
\bibcite{FraserHanson1992-CodeGenerator}{{2}{1992}{{Fraser et~al.}}{{Fraser, Hanson, and Proebsting}}}
\bibcite{HerlihyMoss1993-TransactionalMemory}{{3}{1993}{{Herlihy and Moss}}{{}}}
\bibcite{Strunk-ElementsOfStyle}{{4}{2000}{{Jr. and White}}{{}}}
\bibstyle{abbrvnat}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.3}Running the analysis}{4}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.4}Base case: direct function call}{4}}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces An SDG for the simplest case: a direct function call.}}{4}}
\newlabel{f:firstImpl}{{9}{4}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.5}Additional cases: recursion and lambda functions}{4}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Conclusion}{4}}
\newlabel{sigplanconf@finalpage}{{3}{4}}
